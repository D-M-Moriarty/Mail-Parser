<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.darren.mail.parser</groupId>
  <artifactId>pbm</artifactId>
  <packaging>jar</packaging>
  <name>pbm</name>
  <version>0.1.62-SNAPSHOT</version>

  <!-- Plugin Repository -->
  <repositories>
    <repository>
      <id>central</id>
      <url>http://central.maven.org/maven2/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>maven2</id>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>spring-libs-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/libs-milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>Spring-Plugins</id>
      <url>http://repo.spring.io/plugins-release/</url>
    </repository>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-release</id>
      <url>http://repo.spring.io/libs-release</url>
      <snapshots><enabled>false</enabled></snapshots>
    </repository>
  </repositories>

  <!-- **** Properties **** -->
  <!-- **** PARENT **** -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.0.RELEASE</version>
  </parent>

  <!-- **** PROPERTIES **** -->
  <properties>
    <java.version>1.8</java.version>
    <sonar.exclusions>[...]</sonar.exclusions>
    <sonar.login>32bb0ddd7e8a9eacd029c128a8fe265e1120607c</sonar.login>
    <sonar.exclusions>
      **/serverProperties/*,
      **/rabbitmq/*,
      **/Application*,
      **/AppStartupRunner*,
      **/entity/MailAttachment*,
      **/entity/MailMessage*,
      **/entity/CustomerDetails*,
      **/mail/Mail*
    </sonar.exclusions>
    <docker.registry>docker.io/dmoriarty</docker.registry>
    <docker.skip>false</docker.skip>
    <coverage.reports.dir>${basedir}/target/coverage-reports</coverage.reports.dir>
    <sonar.jacoco.reportPaths>${coverage.reports.dir}/jacoco-unit.exec,
      ${coverage.reports.dir}/jacoco-it.exec
    </sonar.jacoco.reportPaths>
    <!-- Dependency Versions -->
    <version.dependency.slack-webhook>1.4.0</version.dependency.slack-webhook>
    <version.dependency.splunk-javalogging>1.5.3</version.dependency.splunk-javalogging>
    <version.dependency.logback>1.2.3</version.dependency.logback>
    <version.dependency.httpasyncclient>4.0</version.dependency.httpasyncclient>
    <version.dependency.httpclient>4.3.6</version.dependency.httpclient>
    <version.dependency.log4j-api>2.10.0</version.dependency.log4j-api>
    <version.dependency.json-simple>1.1.1</version.dependency.json-simple>
    <version.dependency.splunk>1.6.3.0</version.dependency.splunk>
    <version.dependency.log4j-core>2.10.0</version.dependency.log4j-core>
    <version.dependency.slf4j-api>1.7.25</version.dependency.slf4j-api>
    <version.dependency.springboot>2.0.0.RELEASE</version.dependency.springboot>
    <version.dependency.spring>5.0.3.RELEASE</version.dependency.spring>
    <version.dependency.zohhak>1.1.1</version.dependency.zohhak>
    <version.dependency.javax.mail-api>1.6.1</version.dependency.javax.mail-api>
    <version.dependency.javax.mail>1.6.1</version.dependency.javax.mail>
    <version.dependency.greenmail>1.5.7</version.dependency.greenmail>
    <version.dependency.powermock>1.7.3</version.dependency.powermock>
    <version.dependency.sonar-maven>5.1</version.dependency.sonar-maven>
    <version.dependency.maven-clean>3.0.0</version.dependency.maven-clean>
    <version.dependency.awaitility>3.1.0</version.dependency.awaitility>
    <version.dependency.gson>2.8.2</version.dependency.gson>
    <version.dependency.jackson-mapper-asl>1.9.13</version.dependency.jackson-mapper-asl>
    <version.dependency.jsoup>1.11.2</version.dependency.jsoup>
    <spring-cloud.version>Finchley.M9</spring-cloud.version>

    <!-- Plugin Versions -->
    <version.plugin.docker-maven>1.0.0</version.plugin.docker-maven>
    <version.plugin.maven-build-helper>1.5</version.plugin.maven-build-helper>
    <version.plugin.maven-surefire>2.21.0</version.plugin.maven-surefire>
    <version.plugin.maven-failsafe>2.21.0</version.plugin.maven-failsafe>
    <version.plugin.maven-release>2.5.3</version.plugin.maven-release>
    <version.plugin.maven-plugin>2.0.0.RELEASE</version.plugin.maven-plugin>
    <version.plugin.maven-compiler>3.7.0</version.plugin.maven-compiler>
    <version.plugin.sonarscanner-maven>3.4.0.905</version.plugin.sonarscanner-maven>
    <version.plugin.jacoco-maven>0.8.0</version.plugin.jacoco-maven>
    <version.plugin.maven-checkstyle>3.0.0</version.plugin.maven-checkstyle>
    <version.plugin.maven-resources>3.0.2</version.plugin.maven-resources>
  </properties>

  <!-- **** Distribute Management **** -->
  <distributionManagement>
    <repository>
      <id>docker-hub</id>
      <name>dmoriarty</name>
      <uniqueVersion>false</uniqueVersion>
      <url>https://docker.io/dmoriarty/</url>
    </repository>
  </distributionManagement>

  <!-- **** Team **** -->
  <developers>
    <developer>
      <id>dmoriarty</id>
      <name>Darren Moriarty</name>
      <email>darren.m.moriarty@students.ittralee.ie</email>
    </developer>
  </developers>
  <!-- **** Source Control Manager **** -->
  <scm>
    <connection>scm:git:ssh://git@github.com:D-M-Moriarty/Mail-Parser.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:D-M-Moriarty/Mail-Parser.git</developerConnection>
    <url>https://github.com/D-M-Moriarty/Mail-Parser.git</url>
    <tag>0.1.32</tag>
  </scm>

  <!-- **** Dependencies **** -->
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-amqp</artifactId>
      <version>${version.dependency.springboot}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${version.dependency.springboot}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/javax.json/javax.json-api -->
    <dependency>
        <groupId>javax.json</groupId>
        <artifactId>javax.json-api</artifactId>
        <version>1.1.2</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.glassfish/javax.json -->
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.1.2</version>
    </dependency>
    <dependency>
      <groupId>net.gpedro.integrations.slack</groupId>
      <artifactId>slack-webhook</artifactId>
      <version>${version.dependency.slack-webhook}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.dependency.logback}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${version.dependency.logback}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpasyncclient</artifactId>
      <version>${version.dependency.httpasyncclient}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${version.dependency.httpclient}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${version.dependency.log4j-api}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>${version.dependency.json-simple}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${version.dependency.log4j-core}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.dependency.slf4j-api}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.zohhak</groupId>
      <artifactId>zohhak</artifactId>
      <version>${version.dependency.zohhak}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>javax.mail-api</artifactId>
      <version>${version.dependency.javax.mail-api}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>${version.dependency.javax.mail}</version>
    </dependency>
    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <version>${version.dependency.greenmail}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-maven-plugin</artifactId>
      <version>${version.dependency.sonar-maven}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-clean-plugin</artifactId>
      <version>${version.dependency.maven-clean}</version>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${version.dependency.awaitility}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${version.dependency.gson}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${version.dependency.jackson-mapper-asl}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${version.dependency.spring}</version>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>${version.dependency.jsoup}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <version>${version.dependency.springboot}</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-mail</artifactId>
      <version>${version.dependency.spring}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${version.dependency.spring}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.integration</groupId>
      <artifactId>spring-integration-test</artifactId>
      <version>${version.dependency.spring}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.splunk</groupId>
      <artifactId>splunk</artifactId>
      <version>1.5.0.0</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.splunk.logging/splunk-library-javalogging -->
    <dependency>
      <groupId>com.splunk.logging</groupId>
      <artifactId>splunk-library-javalogging</artifactId>
      <version>1.7.3</version>
    </dependency>

  </dependencies>

  <!-- **** Build Plugins -->
  <build>
    <plugins>
      <!-- Docker Maven Plugin -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${version.plugin.docker-maven}</version>
        <configuration>
          <serverId>docker-hub</serverId>
          <imageName>${docker.registry}/${project.artifactId}</imageName>
          <dockerDirectory>${project.basedir}</dockerDirectory>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>tag-push-docker-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>tag</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <image>${docker.registry}/${project.artifactId}</image>
              <newName>${docker.registry}/${project.artifactId}:${project.version}</newName>
              <imageName>${docker.registry}/${project.artifactId}:${project.version}</imageName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Build Helper to Add Integration Test Folder -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${version.plugin.maven-build-helper}</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/integration-test/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Maven SureFire Plugin (UT) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.plugin.maven-surefire}</version>
        <configuration>
          <argLine>${surefireArgLine}</argLine>
          <skipTests>false</skipTests>
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!-- Maven FailSafe Plugin (IT) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${version.plugin.maven-failsafe}</version>
        <configuration>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>${failsafeArgLine}</argLine>
              <skipTests>false</skipTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Maven Release Plugin for Versioning -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${version.plugin.maven-release}</version>
      </plugin>
      <!-- Spring Boot Maven Plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${version.plugin.maven-plugin}</version>
      </plugin>
      <!-- Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.plugin.maven-compiler}</version>
      </plugin>
      <!-- Sonar Maven Plugin -->
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${version.plugin.sonarscanner-maven}</version>
      </plugin>
      <!-- Jacoco Maven Plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.plugin.jacoco-maven}</version>
        <configuration>
          <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
          <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</destFile>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Maven Checkstyle Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.plugin.maven-checkstyle}</version>
        <executions>
          <execution>
            <id>checkstyle</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
        </configuration>
      </plugin>
      <!-- Maven Resources Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${version.plugin.maven-resources}</version>
        <configuration>
          <delimiters>
            <delimiter>@</delimiter>
          </delimiters>
          <useDefaultDelimiters>false</useDefaultDelimiters>
        </configuration>
      </plugin>
    </plugins>

    <finalName>pbm</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <!-- **** Reporting **** -->
  <reporting>
    <plugins>
      <!-- Maven Checkstyle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <failOnViolation>false</failOnViolation>
          <enableFilesSummary>false</enableFilesSummary>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>sonar</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- Optional URL to server. Default value is http://localhost:9000 -->
        <sonar.host.url>https://sonarcloud.io/</sonar.host.url>
        <sonar.organization>d-m-moriarty-github</sonar.organization>
      </properties>
    </profile>
    <profile>
      <id>dev</id>
      <properties>
        <activatedProperties>dev</activatedProperties>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>${version.plugin.maven-release}</version>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <tagNameFormat>@{project.version}</tagNameFormat>
              <scmCommentPrefix>[RELEASE] </scmCommentPrefix>
              <checkModificationExcludeList>
                pom.xml,
                release.properties
              </checkModificationExcludeList>
              <goals>deploy</goals>
            </configuration>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>perform</goal>
                </goals>
                <configuration>
                  <pomFileName>${project.basedir}/pom.xml</pomFileName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>