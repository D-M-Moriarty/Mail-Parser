---
- name: Create Google Cloud PLatform Compute Engine Instances
  hosts: localhost
  vars:
    service_account_email: "devops@t-isotope-161616.iam.gserviceaccount.com"
    credentials_file: "~/my_account.json"
    project_id: "t-isotope-161616"
    auth_kind: serviceaccount
  tasks:
    - name: create multiple instances
      gce:
        instance_names: qat,uat,prod
        zone: us-west1-b
        machine_type: n1-standard-1
        image: debian-8
        state: present
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        metadata: '{ "startup-script" : "apt-get update" }'
      register: gce

    - name: Save host data
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: gce_instances_ips
      with_items: "{{ gce.instance_data }}"

    - name: Wait for SSH for instances
      wait_for:
        delay: 1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
        timeout: 30
      with_items: "{{ gce.instance_data }}"

- name: Configure docker and docker compose on Hosts
  hosts: gce_instances_ips
  become: True
  gather_facts: True
  vars:
    docker_ecs_login_password: "{{ lookup('env','ECS_LOGIN_PASSWORD') }}"
  environment:
    PYTHONPATH: "{{ lookup('env','PYTHONPATH') }}:/usr/local/lib/python2.7/dist-packages:/usr/local/lib/python2.7/site-packages"
  roles:
    - role: "nickjj.docker"
      tags: ["docker"]
  tasks:
    -
    - name: Ansible copy file to remote server
      copy:
        src: ../docker-compose.yml
        dest: /home/darren.m.moriarty
        owner: darren.m.moriarty
        mode: 0644

    #    #This is because new versions of python modules docker and docker-py that ansible
    ##    uses are incompatible. I had to revert back and explicitly specify the following versions of PIP packages:
    #    - name: install certain python modules for docker
    #      pip:
    #        name: "{{ item.name }}"
    #        version: "{{ item.version }}"
    #        state: present
    #      with_items:
    #        - { name: docker, version: 2.0.0 }
    #        - { name: docker-py, version: 1.10.6 }

    - name: start up docker containers
      debugger: always
      environment:
        HOST: "{{ ansible_hostname }}"
      docker_service:
        project_src: /home/darren.m.moriarty

#export HOST="{{ item.public_ip }}"
#    - name: delete test-instances
#      # Basic termination of instance.
#      gce:
#        service_account_email: "{{ service_account_email }}"
#        credentials_file: "{{ credentials_file }}"
#        project_id: "{{ project_id }}"
#        instance_names: "{{ gce.instance_names }}"
#        zone: us-central1-a
#        state: absent
#      tags:
#        - delete