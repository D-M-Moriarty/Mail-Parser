---
- name: Create Google Cloud PLatform Compute Engine Instances
  hosts: localhost
  vars:
    service_account_email: "devops@t-isotope-161616.iam.gserviceaccount.com"
    credentials_file: "~/my_account.json"
    project_id: "t-isotope-161616"
    auth_kind: serviceaccount
  tasks:
    - name: create multiple instances
      gce:
        instance_names: qat,uat,prod
        zone: us-west1-b
        machine_type: n1-standard-1
        image: debian-9
        state: present
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        metadata: '{ "startup-script" : "apt-get update" }'
      register: gce

    - name: Save host data
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: gce_instances_ips
      with_items: "{{ gce.instance_data }}"

    - name: Wait for SSH for instances
      wait_for:
        delay: 1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
        timeout: 30
      with_items: "{{ gce.instance_data }}"

- name: Configure docker and docker compose on Hosts
  hosts: gce_instances_ips
  become: True
  gather_facts: True
  roles:
    - geerlingguy.pip
    - role: geerlingguy.docker
      docker_service_state: started
      docker_service_enabled: true
      docker_install_compose: true
      docker_users:
        - darren.m.moriarty
        - "{{ ansible_hostname }}"
  tasks:

    - debug: msg="{{ lookup('env','BUILD_NUMBER') }}"

    - name: Ansible copy docker-compose to remote servers
      copy:
        src: ../docker-compose.yml
        dest: /home/darren.m.moriarty
        owner: darren.m.moriarty
        mode: 0644

    - name: Pip install docker for Ansible's docker_login and docker_service modules
      pip:
        name: ["docker", "docker-compose"]

    - name: docker compose up
      docker_service:
        project_src: /home/darren.m.moriarty
        state: present
        recreate: always
      environment:
        HOST: "{{ ansible_hostname }}"
        RELEASE_VERSION: 295
#        RELEASE_VERSION: "{{ lookup('env','BUILD_NUMBER') }}"
#      command: echo "$RELEASE_VERSION is the release version"